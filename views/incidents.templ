package views

import (
"fmt"
"github.com/barturba/ticket-tracker/models"
"github.com/barturba/ticket-tracker/views/partials"
)

templ IncidentFormIndex(incident models.Incident, companies []models.Company, cis []models.ConfigurationItem) {
<div class="max-w-[100vw] px-6 pb-16">
    <form>
        <div class="form-group">
            <label for="companies">Companies</label>
            <select class="w-full select select-bordered" name="company_id" hx-get="/configuration-items"
                aria-describedby="companiesHelp" hx-target="#configurationItems" hx-push-url="false">
                for _, company := range companies{
                <option value={company.ID.String()}>{ company.Name }</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="configurationItems">Configuration Items</label>
            <select id="configurationItems" class="w-full select select-bordered" name="configuration_item_id"
                aria-describedby="configurationItemsHelp" hx-target="#configurationItems">
                for _, configurationItem := range cis{
                <option value={configurationItem.ID.String()}>{ configurationItem.Name }</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="shortDescription">Short Description</label>
            <input name="short_description" type="text" class="w-full input input-bordered" id="shortDescription"
                aria-describedby="shortDescriptionHelp" placeholder="Enter short description"
                value={incident.ShortDescription}>
            <small id="shortDescriptionHelp" class="form-text text-muted">Enter the short description here.</small>
        </div>
        <div class="form-group">
            <label for="description">Description</label>
            <textarea name="description" class="w-full input input-bordered" id="description"
                rows="3">{incident.Description}</textarea>
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </form>
</div>
}

templ IncidentsNewIndex(companies []models.Company, cis []models.ConfigurationItem) {
<h1 class="mb-8 text-2xl font-bold text-center">
    New Incident
</h1>
<form hx-post={"/incidents"} hx-ext="json-enc" hx-push-url="true" hx-target="body" hx-swap="innerHTML">
    @IncidentFormIndex(models.Incident{}, companies, cis)
</form>
}

templ IncidentsEditIndex(incident models.Incident, companies []models.Company, cis []models.ConfigurationItem) {
<h1 class="mb-8 text-2xl font-bold text-center">
    Edit Incident
</h1>
<form hx-put={"/incidents/"+incident.ID.String()} hx-ext="json-enc" hx-push-url="true" hx-target="body"
    hx-swap="innerHTML">
    @IncidentFormIndex(incident, companies, cis)
</form>
}

templ IncidentFormNew(selectOptionsCompany, selectOptionsCI models.SelectOptions, incident models.Incident) {
@partials.FormNew("/incidents") {
@partials.FormSection("Incident", "Incident information") {

@partials.FormInput3Disabled("incident_id", "Incident ID", "", "text", incident.ID.String())
@partials.FormSelect3("company_id", "Company", "company-name", incident.CompanyID.String(), selectOptionsCompany, )
@partials.FormSelect3("configuration_item_id", "Configuration Item", "", incident.ConfigurationItemID.String(),
selectOptionsCI )
@partials.FormInput4("short_description", "Short Description", "", "text", incident.ShortDescription)
@partials.FormTextAreaFull("description", "Description", "Write a description here", incident.Description)
}
}
}


templ IncidentsEdit(page, logo string,
fromProtected, isError bool,
msg,
username,
email,
profilePic string,
menuItems models.MenuItems,
profileItems models.MenuItems,
cmp templ.Component) {
// @InnerLayout(page, logo, fromProtected, isError, msg, username, email, profilePic, menuItems, profileItems) {
@InnerLayout(page) {
@cmp
}
}

templ IncidentTable(incidents []models.Incident) {
@partials.TableWrapper(){
@partials.TableHeader()
<div class="flow-root mt-8">
    <div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
        <div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
            <table class="min-w-full divide-y divide-gray-300">
                @partials.TableHead(){
                @partials.TableRowHeadFirst("ID")
                @partials.TableRowHead("State")
                @partials.TableRowHead("Short Description")
                @partials.TableRowHead("Assigned To")
                @partials.TableRowHead("Configuration Item")
                }
                @partials.TableBody() {
                for _, incident := range incidents{
                <tr>
                    @partials.TableDataFirst(incident.ID.String())
                    @partials.TableData(fmt.Sprintf("%s", incident.State))
                    @partials.TableData(incident.ShortDescription)
                    @partials.TableData(incident.AssignedToName)
                    @partials.TableData(incident.ConfigurationItemName)
                    @partials.TableDataLink("Edit", incident.ID.String())
                </tr>
                }
                }
            </table>
        </div>
    </div>
</div>
}
}

templ IncidentsIndex(incidents []models.Incident) {
<div id="incident-wrapper">
    @IncidentTable(incidents)
</div>
}

templ IncidentsIndexOption1(incidents []models.Incident) {
<div class="relative overflow-x-auto shadow-md sm:rounded-lg">
    <table class="w-full text-sm text-left text-gray-500 rtl:text-right dark:text-gray-400">
        <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
            <tr>
                <th scope="col" class="px-6 py-3">
                    Product name
                </th>
                <th scope="col" class="px-6 py-3">
                    Color
                </th>
                <th scope="col" class="px-6 py-3">
                    Category
                </th>
                <th scope="col" class="px-6 py-3">
                    Price
                </th>
                <th scope="col" class="px-6 py-3">
                    <span class="sr-only">Edit</span>
                </th>
            </tr>
        </thead>
        <tbody>
            <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
                <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                    Apple MacBook Pro 17"
                </th>
                <td class="px-6 py-4">
                    Silver
                </td>
                <td class="px-6 py-4">
                    Laptop
                </td>
                <td class="px-6 py-4">
                    $2999
                </td>
                <td class="px-6 py-4 text-right">
                    <a href="#" class="font-medium text-blue-600 dark:text-blue-500 hover:underline">Edit</a>
                </td>
            </tr>
            <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
                <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                    Microsoft Surface Pro
                </th>
                <td class="px-6 py-4">
                    White
                </td>
                <td class="px-6 py-4">
                    Laptop PC
                </td>
                <td class="px-6 py-4">
                    $1999
                </td>
                <td class="px-6 py-4 text-right">
                    <a href="#" class="font-medium text-blue-600 dark:text-blue-500 hover:underline">Edit</a>
                </td>
            </tr>
            <tr class="bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-600">
                <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                    Magic Mouse 2
                </th>
                <td class="px-6 py-4">
                    Black
                </td>
                <td class="px-6 py-4">
                    Accessories
                </td>
                <td class="px-6 py-4">
                    $99
                </td>
                <td class="px-6 py-4 text-right">
                    <a href="#" class="font-medium text-blue-600 dark:text-blue-500 hover:underline">Edit</a>
                </td>
            </tr>
        </tbody>
    </table>
</div>
}

templ IncidentsIndexOld(incidents []models.Incident) {
<div id="incident-wrapper">
    <button class="font-medium text-gray-600 hover:text-gray-900"
        hx-get="/incidents/164dadd3-cfde-4591-90a4-6004e93294eb/edit" hx-target="#incident-wrapper" hx-push-url="true"
        hx-swap="outerHTML">164dadd3-cfde-4591-90a4-6004e93294eb</button>
    <div id="wrapper"></div>
    <script>
        new gridjs.Grid({
            sort: true,
            columns: [{
                name: "ID", sort: false,
                formatter: (_, row) => gridjs.html(`<button class="font-medium text-gray-600 hover:text-gray-900" hx-get="/incidents/${row.cells[0].data}/edit">${row.cells[0].data}</button>`)
            }, "State", "Short Description", "Assigned To", "Configuration Item"],
            server: {
                url: '/search-incidents',
                then: data => data.results.map(incident =>
                    [
                        incident.id,
                        incident.state,
                        incident.short_description,
                        incident.assigned_to_name,
                        incident.configuration_item,
                    ]
                ),
                total: data => data.count
            },
            sort: {
                multiColumn: false,
                server: {
                    url: (prev, columns) => {
                        if (!columns.length) return prev;

                        const col = columns[0];
                        const dir = col.direction === 1 ? 'asc' : 'desc';
                        let colName = ['state', 'short_description'][col.index];

                        return `${prev}&order=${colName}&dir=${dir}`;
                    }
                }
            },
            search: {
                enabled: true,
                server: {
                    url: (prev, keyword, page) => `${prev}?search=${keyword}`
                }
            },
            pagination: {
                enabled: true,
                limit: 10,
                server: {
                    url: (prev, page, limit) => `${prev}${prev.includes('?') ? '&' : '?'}limit=${limit}&offset=${page * limit}`
                }
            },
            className: {
                table: css`
              tr:hover td {
                background-color: rgba(0, 0, 0, 0.1);
              }
            `,
            },
        }).render(document.getElementById("wrapper"));
    </script>
</div>
}


templ IncidentsList(page, logo string,
fromProtected, isError bool,
msg,
username,
email,
profilePic string,
menuItems models.MenuItems,
profileItems models.MenuItems,
cmp templ.Component) {
@Layout(page, logo, fromProtected, isError, msg, username, email, profilePic, menuItems, profileItems) {
@cmp
}
}