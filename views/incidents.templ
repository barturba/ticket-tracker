package views

import (
"fmt"
"github.com/barturba/ticket-tracker/models"
"github.com/barturba/ticket-tracker/views/partials"
)

templ IncidentForm(action, path string, optsCompany, optsCI, optsState models.SelectOptions, incident models.Incident) {
@partials.FormNew(action, path) {
@partials.FormSection("Incident", "Incident information") {

@partials.FormInput3Disabled("incident_id", "Incident ID", "", "text", incident.ID.String())
@partials.FormSelect3("company_id", "Company", "company-name",
incident.CompanyID.String(),"/configuration-items-select","#configuration_item_id", optsCompany, )
@partials.FormSelect3("configuration_item_id", "Configuration Item", "configuration-item-id",
incident.ConfigurationItemID.String(), "","", optsCI)
@partials.FormSelect3("state", "State", "state", fmt.Sprintf("%s", incident.State), "", "", optsState)
@partials.FormInput4("short_description", "Short Description", "", "text", incident.ShortDescription)
@partials.FormTextAreaFull("description", "Description", "Write a description here", incident.Description)
}
}
}

templ IncidentFormNewIndex(page, logo, fl string,
fromProtected, isError bool,
msg,
username,
email,
profilePic string,
menuItems models.MenuItems,
profileItems models.MenuItems,
cmp templ.Component) {
@Layout(page, logo, fl, fromProtected, isError, msg, username, email, profilePic, menuItems, profileItems) {
@cmp
}
}


templ IncidentsEdit(page, logo, fl string,
fromProtected, isError bool,
msg,
username,
email,
profilePic string,
menuItems models.MenuItems,
profileItems models.MenuItems,
cmp templ.Component) {
@Layout(page, logo, fl, fromProtected, isError, msg, username, email, profilePic, menuItems, profileItems) {
@cmp
}
}

templ IncidentTable(incidents []models.Incident) {
@partials.TableWrapper(){
@partials.TableHeader("Incidents", "A listing of all incidents.", "Add Incident", "/incidents/add")
@partials.TableHeaderWrapper() {
@partials.TableHead(){
@partials.TableRowHeadFirst("ID")
@partials.TableRowHead("State")
@partials.TableRowHead("Short Description")
@partials.TableRowHead("Assigned To")
@partials.TableRowHead("Configuration Item")
}
@partials.TableBody() {
for _, incident := range incidents{
@partials.TableRowWrapper() {
@partials.TableDataFirst(incident.ID.String())
@partials.TableData(fmt.Sprintf("%s", incident.State))
@partials.TableData(incident.ShortDescription)
@partials.TableData(incident.AssignedToName)
@partials.TableData(incident.ConfigurationItemName)
@partials.TableDataLink("Edit", "/incidents/"+incident.ID.String()+"/edit")
}
}
}
}
}
}

templ IncidentsIndex(incidents []models.Incident) {
@IncidentTable(incidents)
}

templ IncidentsList(page, logo, fl string,
fromProtected, isError bool,
msg,
username,
email,
profilePic string,
menuItems models.MenuItems,
profileItems models.MenuItems,
cmp templ.Component) {
@Layout(page, logo, fl, fromProtected, isError, msg, username, email, profilePic, menuItems, profileItems) {
@cmp
}
}