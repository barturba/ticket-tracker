package partials

import (
"github.com/barturba/ticket-tracker/models"
)

templ IncidentSearch() {
<div class="bg-white">
    <div class="relative z-10 mt-2">
        <input hx-get="/search-incidents" hx-target="#options" hx-trigger="keyup delay:300ms"
            _="on click from elsewhere add .hidden to #options end on click remove .hidden from #options end on load add .hidden to #options end"
            type="text" name="search_term" id="search_term"
            class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
            placeholder="Search">
        <div class="absolute bg-white">
            <ul id="options" class="py-2 -mb-2 overflow-y-auto text-sm text-gray-800 max-h-72 scroll-py-2"
                role="listbox">
            </ul>
        </div>
    </div>
</div>
}

templ NavbarTitle(title string) {
<header id="navbar-title" class="py-10">
    <div class="px-4 mx-auto max-w-7xl sm:px-6 lg:px-8">
        <h1 class="text-3xl font-bold tracking-tight text-white">{title}</h1>
    </div>
</header>
}
templ NavbarLogoMenu(title string, menuItems models.MenuItems) {
<div class="hidden md:block">
    <div class="flex items-baseline ml-10 space-x-4">
        if len(menuItems) > 0 {
        for _, item := range menuItems {
        if (item.Name == title) {
        <button hx-get={item.Link} hx-swap="transition:true" hx-target="body" hx-push-url="true"
            class="px-3 py-2 text-sm font-medium text-white bg-gray-900 rounded-md"
            aria-current="page">{item.Name}</button>

        } else {
        <button hx-get={item.Link} hx-swap="transition:true" hx-target="body" hx-push-url="true"
            class="px-3 py-2 text-sm font-medium text-gray-300 rounded-md hover:bg-gray-700 hover:text-white">{item.Name}</button>
        }
        }

        }
    </div>
</div>
}

templ NavbarLogo(fp bool, title, logo, logoText string, menuItems models.MenuItems) {
<div class="flex items-center">
    <div class="flex-shrink-0">
        <img class="w-8 h-8" src={logo} alt={logoText}>
    </div>
    if fp {
    @NavbarLogoMenu(title, menuItems)
    }
</div>
}

templ NavbarNotificationsAndProfile(title, profilePicture string, profileItems models.MenuItems) {
<div class="hidden md:block">
    <div class="flex items-center ml-4 md:ml-6">
        if false {
        <button type="button"
            class="relative p-1 text-gray-400 bg-gray-800 rounded-full hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800">
            <span class="absolute -inset-1.5"></span>
            <span class="sr-only">View notifications</span>
            <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
                aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round"
                    d="M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0" />
            </svg>
        </button>
        }

        <!-- Profile dropdown -->
        if len(profileItems) > 0 {
        <div class="relative ml-3" x-data="{ isOpenProfile: false }">
            <div>
                <button type="button" @click="isOpenProfile = !isOpenProfile"
                    class="relative flex items-center max-w-xs text-sm bg-gray-800 rounded-full focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800"
                    id="user-menu-button" aria-expanded="false" aria-haspopup="true">
                    <span class="absolute -inset-1.5"></span>
                    <span class="sr-only">Open user menu</span>
                    <img class="w-8 h-8 rounded-full" src={profilePicture} alt="">
                </button>
            </div>

            <!--
                    Dropdown menu, show/hide based on menu state.

                    Entering: "transition ease-out duration-100"
                      From: "transform opacity-0 scale-95"
                      To: "transform opacity-100 scale-100"
                    Leaving: "transition ease-in duration-75"
                      From: "transform opacity-100 scale-100"
                      To: "transform opacity-0 scale-95"
                  -->
            <div x-cloak x-show="isOpenProfile" x-transition:enter="transition ease-out duration-100"
                x-transition:enter-start="transform opacity-0 scale-95"
                x-transition:enter-end="transform opacity-100 scale-100"
                x-transition:leave="transition ease-in duration-75"
                x-transition:leave-start="transform opacity-100 scale-100"
                x-transition:leave-end="transform opacity-0 scale-95"
                class="absolute right-0 z-10 w-48 py-1 mt-2 origin-top-right bg-white rounded-md shadow-lg cursor-pointer ring-1 ring-black ring-opacity-5 focus:outline-none"
                role="menu" aria-orientation="vertical" aria-labelledby="user-menu-button" tabindex="-1">
                for _, item := range profileItems{
                if (item.Name == title) {
                <a hx-swap="transition:true" hx-get={item.Link} hx-target="body" hx-push-url="true"
                    class="block px-4 py-2 text-sm text-gray-700 bg-gray-100" role="menuitem" tabindex="-1"
                    id="user-menu-item-0">{item.Name}</a>
                } else {
                <a hx-swap="transition:true" hx-get={item.Link} hx-target="body" hx-push-url="true"
                    class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" role="menuitem" tabindex="-1"
                    id="user-menu-item-0">{item.Name}</a>
                }
                }
            </div>
        </div>
        }
    </div>
</div>
}

templ NavbarMobileMenu() {
<div class="flex -mr-2 md:hidden">
    <!-- Mobile menu button -->
    <button type="button" @click="isOpen = !isOpen"
        class="relative inline-flex items-center justify-center p-2 text-gray-400 bg-gray-800 rounded-md hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800"
        aria-controls="mobile-menu" aria-expanded="false">
        <span class="absolute -inset-0.5"></span>
        <span class="sr-only">Open main menu</span>
        <!-- Menu open: "hidden", Menu closed: "block" -->
        <svg :class="{'hidden': isOpen, 'block': !isOpen}" class="w-6 h-6" fill="none" viewBox="0 0 24 24"
            stroke-width="1.5" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
        </svg>
        <!-- Menu open: "block", Menu closed: "hidden" -->
        <svg x-cloak :class="{'block': isOpen, 'hidden': !isOpen}" class="w-6 h-6" fill="none" viewBox="0 0 24 24"
            stroke-width="1.5" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
        </svg>
    </button>
</div>

}

templ NavbarShowMobileMenu(title, username, email, profilePicture string, menuItems, profileItems models.MenuItems) {
<!-- Mobile menu, show/hide based on menu state. -->
<div x-cloak x-show="isOpen" class="border-b border-gray-700 red md:hidden" id="mobile-menu">
    <div class="px-2 py-3 space-y-1 sm:px-3">
        <!-- Current: "bg-gray-900 text-white", Default: "text-gray-300 hover:bg-gray-700 hover:text-white" -->
        for _, item := range menuItems{
        if (item.Name == title) {
        <button hx-get={item.Link} hx-swap="transition:true" hx-target="body" hx-push-url="true"
            class="block px-3 py-2 text-base font-medium text-white bg-gray-900 rounded-md"
            aria-current="page">{item.Name}</button>

        } else {
        <button hx-get={item.Link} hx-swap="transition:true" hx-target="body" hx-push-url="true"
            class="block px-3 py-2 text-base font-medium text-gray-300 rounded-md hover:bg-gray-700 hover:text-white">{item.Name}</button>
        }
        }
    </div>
    <div class="pt-4 pb-3 border-t border-gray-700">
        <div class="flex items-center px-5">
            <div class="flex-shrink-0">
                <img class="w-10 h-10 rounded-full" src={profilePicture} alt="">
            </div>
            <div class="ml-3">
                <div class="text-base font-medium leading-none text-white">{username}</div>
                <div class="text-sm font-medium leading-none text-gray-400">{email}</div>
            </div>
            <button type="button"
                class="relative flex-shrink-0 p-1 ml-auto text-gray-400 bg-gray-800 rounded-full hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800">
                <span class="absolute -inset-1.5"></span>
                <span class="sr-only">View notifications</span>
                <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
                    aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round"
                        d="M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0" />
                </svg>
            </button>
        </div>
        <div class="px-2 mt-3 space-y-1">
            for _, item := range profileItems{
            <a hx-swap="transition:true" hx-get={item.Link} hx-target="body" hx-push-url="true"
                class="block px-3 py-2 text-base font-medium text-gray-400 rounded-md hover:bg-gray-700 hover:text-white">
                {item.Name}</a>
            }
        </div>
    </div>
</div>
}

templ NavbarLeft(fp bool, title, logo, logoText, profilePicture string, profileItems, menuItems models.MenuItems) {
<div class="mx-auto max-w-7xl sm:px-6 lg:px-8">
    <div class="border-b border-gray-700">
        <div class="flex items-center justify-between h-16 px-4 sm:px-0">
            if fp {
            @NavbarLogo(fp, title, logo, logoText, menuItems)
            @NavbarNotificationsAndProfile(title, profilePicture, profileItems)
            @NavbarMobileMenu()
            } else {
            @NavbarLogo(fp, title, logo, logoText, menuItems)
            }
        </div>
    </div>
</div>

}

templ NavbarNew(fp bool, un, email, profPic, title, logo, logoText string, menuItems, profileItems models.MenuItems) {

<div class="pb-32 bg-gray-800">
    <nav x-data="{ isOpen: false }" class="bg-gray-800">
        @NavbarLeft(fp, title, logo, logoText, profPic, profileItems, menuItems)
        if fp {
        @NavbarShowMobileMenu(title, un, email, profPic, menuItems, profileItems)
        }
    </nav>
    @NavbarTitle(title)
</div>
}