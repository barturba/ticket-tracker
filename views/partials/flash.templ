package partials

import (
"fmt"
"github.com/barturba/ticket-tracker/models"
)
templ FlashMessageError(alert models.Alert) {
<svg class="w-5 h-5 text-red-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
    <path fill-rule="evenodd"
        d="M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16ZM8.28 7.22a.75.75 0 0 0-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 1 0 1.06 1.06L10 11.06l1.72 1.72a.75.75 0 1 0 1.06-1.06L11.06 10l1.72-1.72a.75.75 0 0 0-1.06-1.06L10 8.94 8.28 7.22Z"
        clip-rule="evenodd" />
</svg>
}

templ FlashMessageWarning(alert models.Alert) {
<svg class="w-5 h-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
    <path fill-rule="evenodd"
        d="M8.485 2.495c.673-1.167 2.357-1.167 3.03 0l6.28 10.875c.673 1.167-.17 2.625-1.516 2.625H3.72c-1.347 0-2.189-1.458-1.515-2.625L8.485 2.495zM10 5a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 5zm0 9a1 1 0 100-2 1 1 0 000 2z"
        clip-rule="evenodd" />
</svg>
}

templ FlashMessageSuccess(alert models.Alert) {
<svg class="w-5 h-5 text-green-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
    <path fill-rule="evenodd"
        d="M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16Zm3.857-9.809a.75.75 0 0 0-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 1 0-1.06 1.061l2.5 2.5a.75.75 0 0 0 1.137-.089l4-5.5Z"
        clip-rule="evenodd" />
</svg>
}

templ FlashMessageInfo(alert models.Alert) {
<svg class="w-5 h-5 text-blue-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
    <path fill-rule="evenodd"
        d="M18 10a8 8 0 1 1-16 0 8 8 0 0 1 16 0Zm-7-4a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM9 9a.75.75 0 0 0 0 1.5h.253a.25.25 0 0 1 .244.304l-.459 2.066A1.75 1.75 0 0 0 10.747 15H11a.75.75 0 0 0 0-1.5h-.253a.25.25 0 0 1-.244-.304l.459-2.066A1.75 1.75 0 0 0 9.253 9H9Z"
        clip-rule="evenodd" />
</svg>
}

// Colors were'nt working right if we decompose these too much
templ FlashMessageWrapper(alert models.Alert) {
if alert.AlertType == models.AlertEnumError {
<div class="p-4 rounded-md bg-red-50">
    <div class="flex ">
        <div class="flex-shrink-0">
            @FlashMessageError(alert)
        </div>
        <div class="ml-3">
            <h3 class="text-sm font-medium text-red-800">{fmt.Sprintf("%s",alert.AlertType)}</h3>
            <div class="mt-2 text-sm text-red-700">
                <p>{alert.Message}</p>
            </div>
        </div>
    </div>
</div>
} else if alert.AlertType == models.AlertEnumWarning{
<div class="p-4 rounded-md bg-yellow-50">
    <div class="flex ">
        <div class="flex-shrink-0">
            @FlashMessageWarning(alert)
        </div>
        <div class="ml-3">
            <h3 class="text-sm font-medium text-yellow-800">{fmt.Sprintf("%s",alert.AlertType)}</h3>
            <div class="mt-2 text-sm text-yellow-700">
                <p>{alert.Message}</p>
            </div>
        </div>
    </div>
</div>
} else if alert.AlertType == models.AlertEnumSuccess{
<div class="p-4 rounded-md bg-green-50">
    <div class="flex ">
        <div class="flex-shrink-0">
            @FlashMessageSuccess(alert)
        </div>
        <div class="ml-3">
            <h3 class="text-sm font-medium text-green-800">{fmt.Sprintf("%s",alert.AlertType)}</h3>
            <div class="mt-2 text-sm text-green-700">
                <p>{alert.Message}</p>
            </div>
        </div>
    </div>
</div>
} else if alert.AlertType == models.AlertEnumInfo{
<div class="p-4 rounded-md bg-blue-50">
    <div class="flex ">
        <div class="flex-shrink-0">
            @FlashMessageInfo(alert)
        </div>
        <div class="ml-3">
            <h3 class="text-sm font-medium text-blue-800">{fmt.Sprintf("%s",alert.AlertType)}</h3>
            <div class="mt-2 text-sm text-blue-700">
                <p>{alert.Message}</p>
            </div>
        </div>
    </div>
</div>
}
}

templ FlashMessage(alert models.Alert) {
<div role="alert" x-data="{show: true}" x-show="show" x-transition:enter="transition ease-out duration-300"
    x-transition:enter-start="opacity-0 scale-90" x-transition:enter-end="opacity-100 scale-100"
    x-transition:leave="transition ease-in duration-300" x-transition:leave-start="opacity-100 scale-100"
    x-transition:leave-end="opacity-0 scale-90" x-init="setTimeout(() => show = false, 3000)"
    class="fixed z-10 w-64 space-y-2 top-4 right-4">
    @FlashMessageWrapper(alert)
</div>
}